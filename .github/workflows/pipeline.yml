name: pipeline

on:
  push:
    branches:
      - master
      - dev
  pull_request:

jobs:
  test-job:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
        os: [ubuntu-latest, windows-latest]
    steps:
    - uses: actions/checkout@v3
    - name: Cache conda
      uses: actions/cache@v3
      env:
        # Increase this value to reset cache if etc/example-environment.yml has not changed
        CACHE_NUMBER: 2
      with:
        path: ~/conda_pkgs_dir
        key:
          ${{ matrix.os }}-python_${{ matrix.python-version }}-${{ env.CACHE_NUMBER }}-${{ hashFiles('etc/example-environment.yml') }}
    - uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: ${{ matrix.python-version }}
        miniforge-variant: Mambaforge
        use-mamba: true
        auto-update-conda: true
        channels: conda-forge,
    - name: Install dependencies
      run: |
        mamba install cadet
        pip install -e ./[testing]
    - name: Test
      run: |
        python -m unittest discover -s tests
    - name: Install pypa/build
      run: |
        python -m pip install build --user
    - name: Build binary wheel and source tarball
      run: |
        python -m build --sdist --wheel --outdir dist/ .
    - name: Test Wheel install and import
      run: |
        python -c "import CADETProcess; print(CADETProcess.__version__)"
